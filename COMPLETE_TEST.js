// Script de prueba completo para verificar las correcciones
// Copia y pega este c√≥digo en la consola del navegador

console.log('=== Script de Prueba Completo ===');

// Funci√≥n para ejecutar todas las pruebas
async function runAllTests() {
  console.log('\nIniciando todas las pruebas...\n');
  
  // Prueba 1: Verificar sesi√≥n
  console.log('1. Probando verificaci√≥n de sesi√≥n...');
  try {
    const sessionResponse = await fetch('/api/session-test', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const sessionData = await sessionResponse.json();
    console.log('   Resultado sesi√≥n:', sessionData);
    
    if (sessionData.status === 'success') {
      console.log('   ‚úÖ Sesi√≥n verificada correctamente');
    } else {
      console.log('   ‚ùå Error en verificaci√≥n de sesi√≥n:', sessionData.message);
    }
  } catch (error) {
    console.log('   ‚ùå Error en verificaci√≥n de sesi√≥n:', error);
  }
  
  // Prueba 2: Diagn√≥stico completo
  console.log('\n2. Probando diagn√≥stico completo...');
  try {
    const diagResponse = await fetch('/api/diagnostic', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const diagData = await diagResponse.json();
    console.log('   Resultado diagn√≥stico:', diagData);
    
    if (diagData.status === 'success') {
      console.log('   ‚úÖ Diagn√≥stico completado correctamente');
    } else {
      console.log('   ‚ùå Error en diagn√≥stico:', diagData.message);
    }
  } catch (error) {
    console.log('   ‚ùå Error en diagn√≥stico:', error);
  }
  
  // Prueba 3: Prueba de eliminaci√≥n (simulaci√≥n)
  console.log('\n3. Probando llamada de eliminaci√≥n (simulaci√≥n)...');
  try {
    const deleteResponse = await fetch('/api/delete-user-test', {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ id: 'test-user-id' })
    });
    
    const deleteData = await deleteResponse.json();
    console.log('   Resultado eliminaci√≥n (test):', deleteData);
    
    if (deleteData.receivedId) {
      console.log('   ‚úÖ Llamada de eliminaci√≥n funciona correctamente');
    } else {
      console.log('   ‚ùå Error en llamada de eliminaci√≥n');
    }
  } catch (error) {
    console.log('   ‚ùå Error en llamada de eliminaci√≥n:', error);
  }
  
  // Prueba 4: Verificar elementos del DOM
  console.log('\n4. Verificando elementos del DOM...');
  const deleteButtons = Array.from(document.querySelectorAll('button')).filter(button => 
    button.textContent.includes('Eliminar') || 
    button.textContent.includes('Delete')
  );
  
  console.log('   Botones de eliminaci√≥n encontrados:', deleteButtons.length);
  
  if (deleteButtons.length > 0) {
    console.log('   ‚úÖ Se encontraron botones de eliminaci√≥n');
    deleteButtons.forEach((button, index) => {
      console.log('     Bot√≥n #' + (index + 1) + ':', button.textContent.trim());
    });
  } else {
    console.log('   ‚Ñπ No se encontraron botones de eliminaci√≥n');
  }
  
  // Prueba 5: Verificar objeto supabase
  console.log('\n5. Verificando objeto supabase...');
  try {
    if (typeof supabase !== 'undefined') {
      console.log('   ‚úÖ Objeto supabase disponible en el √°mbito global');
      console.log('   URL:', supabase?.rest?.url || 'No disponible');
    } else {
      console.log('   ‚Ñπ Objeto supabase no encontrado en el √°mbito global');
    }
  } catch (e) {
    console.log('   ‚ùå Error al verificar supabase:', e.message);
  }
  
  console.log('\n=== Todas las pruebas completadas ===');
}

// Funci√≥n para probar la eliminaci√≥n real de un usuario (con confirmaci√≥n)
async function testRealUserDeletion() {
  console.log('\n=== Prueba de Eliminaci√≥n Real de Usuario ===');
  
  // Primero, obtener la sesi√≥n
  console.log('Obteniendo sesi√≥n...');
  try {
    const sessionResponse = await fetch('/api/session-test', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const sessionData = await sessionResponse.json();
    
    if (sessionData.status !== 'success') {
      console.log('‚ùå No se pudo obtener la sesi√≥n');
      return;
    }
    
    console.log('‚úÖ Sesi√≥n obtenida:', sessionData.session.user.email);
    
    // Solicitar ID de usuario a eliminar
    const userId = prompt('Introduce el ID del usuario a eliminar (o "cancel" para cancelar):');
    
    if (!userId || userId === 'cancel') {
      console.log('‚ùå Operaci√≥n cancelada por el usuario');
      return;
    }
    
    // Confirmar eliminaci√≥n
    const confirmDelete = confirm(`¬øEst√°s seguro de que quieres eliminar al usuario con ID: ${userId}? Esta acci√≥n no se puede deshacer.`);
    
    if (!confirmDelete) {
      console.log('‚ùå Eliminaci√≥n cancelada por el usuario');
      return;
    }
    
    // Realizar la eliminaci√≥n
    console.log('Enviando solicitud de eliminaci√≥n...');
    const deleteResponse = await fetch('/api/delete-user', {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ id: userId })
    });
    
    console.log('Respuesta de eliminaci√≥n:', deleteResponse.status, deleteResponse.statusText);
    
    if (deleteResponse.ok) {
      const result = await deleteResponse.json();
      console.log('‚úÖ Resultado de eliminaci√≥n:', result);
    } else {
      const errorData = await deleteResponse.json();
      console.log('‚ùå Error en eliminaci√≥n:', errorData);
    }
  } catch (error) {
    console.log('‚ùå Error en prueba de eliminaci√≥n:', error);
  }
}

// Exportar funciones para uso manual
window.testUtils = {
  runAllTests: runAllTests,
  testRealUserDeletion: testRealUserDeletion
};

console.log('\nüí° Herramientas disponibles en window.testUtils:');
console.log('   - runAllTests(): Ejecutar todas las pruebas autom√°ticamente');
console.log('   - testRealUserDeletion(): Probar eliminaci√≥n real de usuario (con confirmaciones)');

console.log('\nPara ejecutar todas las pruebas, escribe:');
console.log('   await window.testUtils.runAllTests()');

console.log('\nPara probar la eliminaci√≥n real de un usuario, escribe:');
console.log('   await window.testUtils.testRealUserDeletion()');