// Script de diagnóstico para verificar locales en la tabla 'data'\n// Copia y pega este código en la consola del navegador\n\nasync function diagnosticarLocales() {\n  console.log('=== Diagnóstico de Locales ===');\n  \n  try {\n    // Importar el cliente de Supabase\n    const { supabase } = await import('@/lib/supabaseClient');\n    \n    // Verificar sesión\n    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n    console.log('Sesión:', sessionData?.session ? 'Activa' : 'No activa');\n    \n    if (sessionError) {\n      console.error('Error de sesión:', sessionError);\n      return;\n    }\n    \n    // Verificar tabla 'data'\n    console.log('\\n1. Verificando tabla \\'data\\'...');\n    const { data: dataResult, error: dataError } = await supabase\n      .from('data')\n      .select('*')\n      .limit(5);\n    \n    if (dataError) {\n      console.error('Error al acceder a la tabla \\'data\\':', dataError);\n    } else {\n      console.log('Registros encontrados en \\'data\\':', dataResult?.length || 0);\n      if (dataResult && dataResult.length > 0) {\n        console.log('Primeros registros:', dataResult);\n        \n        // Verificar campo 'Local'\n        const locales = [...new Set(dataResult.map(item => item.Local))].sort();\n        console.log('Locales únicos encontrados:', locales);\n      }\n    }\n    \n    // Verificar tabla 'user_locals'\n    console.log('\\n2. Verificando tabla \\'user_locals\\'...');\n    const { data: userLocalsResult, error: userLocalsError } = await supabase\n      .from('user_locals')\n      .select('*')\n      .limit(5);\n    \n    if (userLocalsError) {\n      console.error('Error al acceder a la tabla \\'user_locals\\':', userLocalsError);\n    } else {\n      console.log('Registros encontrados en \\'user_locals\\':', userLocalsResult?.length || 0);\n      if (userLocalsResult && userLocalsResult.length > 0) {\n        console.log('Primeros registros:', userLocalsResult);\n      }\n    }\n    \n    // Verificar permisos RLS\n    console.log('\\n3. Verificando permisos de lectura...');\n    \n    // Probar consulta específica para locales\n    const { data: localsData, error: localsError } = await supabase\n      .from('data')\n      .select('Local');\n    \n    if (localsError) {\n      console.error('Error al obtener locales:', localsError);\n    } else {\n      console.log('Consulta de locales exitosa');\n      const uniqueLocals = [...new Set(localsData.map(item => item.Local))].sort();\n      console.log('Locales disponibles:', uniqueLocals);\n    }\n    \n    console.log('\\n=== Fin del diagnóstico ===');\n    \n  } catch (error) {\n    console.error('Error en diagnóstico:', error);\n  }\n}\n\n// Ejecutar diagnóstico\nconsole.log('Para ejecutar el diagnóstico, escribe: await diagnosticarLocales()');